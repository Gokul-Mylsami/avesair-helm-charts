# Frontend configuration
frontend:
  replicaCount: 1
  containerName: frontend
  image:
    repository: gokulmsfag/finaltask-frontend
    tag: latest
    pullPolicy: Always
  resources:
    requests:
      cpu: "300m"
      memory: "64Mi"
    limits:
      cpu: "500m"
      memory: "128Mi"
  env:
    - name: BACKEND_API
      valueFrom:
        configMapKeyRef:
          name: application-config
          key: BACKEND_API
  port: 80

  service:
    type: ClusterIP
    port: 80
    targetPort: 80
    protocol: TCP

# backend configuration

backend:
  replicas: 1
  containerName: backend
  image:
    repository: gokulmsfag/finaltask-backend
    tag: latest
    pullPolicy: Always
  resources:
    requests:
      memory: 256Mi
      cpu: 500m
    limits:
      memory: 512Mi
      cpu: 1
  env:
    - name: PORT
      valueFrom:
        configMapKeyRef:
          name: application-config
          key: PORT
    - name: NODE_ENV
      valueFrom:
        configMapKeyRef:
          name: application-config
          key: NODE_ENV
    - name: MONGO_URL
      valueFrom:
        secretKeyRef:
          name: application-secrets
          key: MONGO_URL
    - name: JWT_SECRET
      valueFrom:
        secretKeyRef:
          name: application-secrets
          key: JWT_SECRET
    - name: JWT_EXPIRES_IN
      value: 1d
    - name: EMAIL_SERVICE
      value: gmail
    - name: EMAIL_USERNAME
      valueFrom:
        secretKeyRef:
          name: application-secrets
          key: EMAIL_USERNAME
    - name: EMAIL_PASSWORD
      valueFrom:
        secretKeyRef:
          name: application-secrets
          key: EMAIL_PASSWORD
    - name: FRONTEND_URL
      value: frontend.gokulmylsami.me
  port: 
    - containerPort: 8000
  
  service: 
    type: ClusterIP
    port: 8000
    targetPort: 8000
    protocol: TCP

# Alertmanager configuration
alertmanager:
  deployment:
    replicas: 1
    containerName: alertmanager
    image:
      repository: quay.io/prometheus/alertmanager
      tag: v0.23.0
    args:
      - "--config.file=/etc/alertmanager/config/alertmanager.yaml"
      - "--storage.path=/data"
    env:
      - name: SLACK_URL
        valueFrom:
        secretKeyRef:
          name: application-secrets
          key: SLACK_URL
    resources:
      limits:
        cpu: "100m"
        memory: 128Mi
    volumeMounts:
      - name: config-volume
        mountPath: /etc/alertmanager/config
      - name: storage-volume
        mountPath: /data
    volumes:
      - name: config-volume
        configMap:
          name: alertmanager-config
      - name: storage-volume
        emptyDir: {}

  config:
    alertmanagerYaml:
      global:
        resolve_timeout: 5m
      route:
        group_by: ["alertname"]
        group_wait: 10s
        group_interval: 10s
        repeat_interval: 1h
        receiver: "slack-notifications"
      receivers:
        - name: "slack-notifications"
          slack_configs:
            - channel: "#prometheus-alerts"
              api_url: "https://hooks.slack.com/services/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"
              send_resolved: true

  service:
    ports:
      name: web
      port: 9093
      targetPort: 9093

# grafana
grafana:
  replica: 1
  containerName: grafana
  image:
    repository: grafana/grafana
    tag: latest
    pullPolicy: Always
  resources:
    limits:
      memory: 128Mi
      cpu: 100m
  ports: 
    - containerPort: 3000
  
  service: 
    type: ClusterIP
    port: 3000
    targetPort: 3000
    protocol: TCP

hpa: 
  minReplicas: 1
  maxReplicas: 4
  metrics: 
    name: cpu
    target: 
      averageUtilization: 70
      type: Utilization
    type: Resource
  scaleTargetRef: 
    apiVersion: apps/v1
    kind: Deployment
    name: backend-deployment

mongoJob:
  completions: 1
  containerName: mongodb-replica-set-config
  image:
    repository: gokulmsfag/mongo-job
    tag: latest
    pullPolicy: Always
  command: 
    - "/bin/sh"
    - "-c"
    - "./script.sh mongodb-0.mongodb-service.default.svc.cluster.local mongodb-1.mongodb-service.default.svc.cluster.local mongodb-2.mongodb-service.default.svc.cluster.local"
  restartPolicy: Never

configMap:
  PORT: "8000"
  NODE_ENV: production
  JWT_EXPIRE: 1d
  EMAIL_SERVICE: gmail
  FRONTEND_URL: frontend-service.default
  BACKEND_API: backend-service.default:8000

storageClass:
  provisioner: efs.csi.aws.com

stressJob:
  completions: 1
  containerName: stress-job
  image: 
    repository: gokulmsfag/testing-job
    tag: 1
    pullPolicy: Always
  command: ["node","tester.js"]
  restartPolicy: Never